/**
 * @package
 * @author  2023 3iPunt <https://www.tresipunt.com/>
 * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("mod_tipcoll/groups",["jquery","core/str","core/ajax","core/templates"],(function($,Str,Ajax,Templates){let INPUT_GROUP_NAME="#form-create-group #name",ACTION_CREATE_GROUP='[data-action="create-group"]',ACTION_DELETE_GROUP='[data-action="delete-group"]',ACTION_ASSIGN_GROUP='[data-action="assign-group"]',SERVICES_CREATE="mod_tipcoll_group_create",SERVICES_DELETE="mod_tipcoll_group_delete",SERVICES_ASSIGN="mod_tipcoll_group_assign";function Groups(region,cmid){this.node=$(region),this.cmid=cmid,this.node.find(INPUT_GROUP_NAME).on("keyup",this.onGroupNameChange.bind(this)),this.node.find(ACTION_CREATE_GROUP).on("click",this.onCreateClick.bind(this)),this.node.find(ACTION_DELETE_GROUP).on("click",this.onDeleteClick.bind(this)),this.node.find(ACTION_ASSIGN_GROUP).on("change",this.onAssignClick.bind(this))}return Groups.prototype.onGroupNameChange=function(e){let groupname=$(INPUT_GROUP_NAME).val();groupname=groupname.trim(),groupname.length>3?this.node.find(ACTION_CREATE_GROUP).removeAttr("disabled"):this.node.find(ACTION_CREATE_GROUP).attr("disabled",!0)},Groups.prototype.onCreateClick=function(e){this.node.find(ACTION_CREATE_GROUP).attr("disabled",!0);let groupname=$(INPUT_GROUP_NAME).val();groupname=groupname.trim();const request={methodname:SERVICES_CREATE,args:{cmid:this.cmid,name:groupname}};Ajax.call([request])[0].done((function(response){response.success?location.reload():console.log(response)})).fail((function(fail){console.log(fail)}))},Groups.prototype.onDeleteClick=function(e){$(e.currentTarget).attr("disabled",!0);let gid=$(e.currentTarget).data("groupid");const request={methodname:SERVICES_DELETE,args:{cmid:this.cmid,groupid:parseInt(gid)}};Ajax.call([request])[0].done((function(response){response.success?location.reload():console.log(response)})).fail((function(fail){console.log(fail)}))},Groups.prototype.onAssignClick=function(e){let gid=$(e.currentTarget).val(),uid=$(e.currentTarget).data("userid");const request={methodname:SERVICES_ASSIGN,args:{cmid:this.cmid,userid:parseInt(uid),groupid:parseInt(gid)}};Ajax.call([request])[0].done((function(response){response.success?location.reload():console.log(response)})).fail((function(fail){console.log(fail)}))},Groups.prototype.node=null,{initGroups:function(region,cmid){return new Groups(region,cmid)}}}));

//# sourceMappingURL=groups.min.js.map